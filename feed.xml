<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mustafa C. Kuşçu</title>
    <description>Big thinker, small starter. Fully independent brain with values. Running after kismet. Outcome: Chaotic progress skills with increasing self motivation. Lives physically in Istanbul, Turkey and  virtually in Sunnyvale, CA (c) Copyright Mustafa Kuşçu. All rights reserved.
</description>
    <link>http://blog.kodguru.com/</link>
    <atom:link href="http://blog.kodguru.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 10 Sep 2015 17:23:02 +0300</pubDate>
    <lastBuildDate>Thu, 10 Sep 2015 17:23:02 +0300</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>Elasticsearch köşesi</title>
        <description>&lt;p&gt;Bugünlerde, yıllardır beklediğimiz dönüşümün sinyallerini almaya başladık. Birçok kurum, bulutta yaşanan dönüşümün benzerini big data’da yapmaya hazırlanıyor. Böylece inanılmaz bir kapasite artışı gerçekleşecek.&lt;/p&gt;

&lt;p&gt;Başta finans, telekom gibi sektörlerde IT stratejilerinin riskten kaçındığı, denenmiş ve oturmuş teknolojileri tercih ettiği bilinen bir gerçek. Tam da bu noktada big data (yazının geri kalanında büyük veri diyeceğim) çözümlerinde önemli bir algı eşiğinin aşıldığını gözlemlemekteyiz. Konvansiyonel 3 katmanlı uygulama yapısının terkine gidecek süreç, aynı zamanda ETL süreçlerinin ve konvansiyonel DWH yaklaşımının yavaş yavaş sonuna geldiği anlamını taşıyor.&lt;/p&gt;

&lt;p&gt;Önemli değişimlerin yaşandığı bir dönemdeyiz. Son 20 yıldır, client-server, yani istemci-sunucu şeklinde çalışan web mimarisinin doğal bir sonucu olarak yaygınlaşan, son yıllara kadar ciddi olarak sorgulanmayan 3 katmanlı uygulama mimarisi, artık ölçeklenebilirlik açısından gebe olduğu darboğazlar kaçınılmaz hal aldığından son günlerini yaşıyor. Bugün yapılacak hiçbir IT yatırımı konvansiyonel mimari ile kurgulanmış olmamalıdır. Bugünü bir milat kabul edip, büyük veri mimarisine yönelerek geleceğe yatırım yapma zamanıdır.&lt;/p&gt;

&lt;h3 id=&quot;byk-veri-yolculuuna-elastic-ile-balayn&quot;&gt;Büyük veri yolculuğuna Elastic ile başlayın!&lt;/h3&gt;
&lt;p&gt;Başlangıç için Elastic ile bir deneme yapmanızı öneririm. Elastic, verinin büyüdüğü, büyüme riskini taşıdığı her alanda kullanılabilecek, esnek, açık kaynak ölçeklenebilir bir platform. 2012 yılında ortaya çıkmasına rağmen, geçen üç yılda popülerlik ve kullanım yaygınlığı açısından büyüyerek inanılmaz bir yol katetti. Öyle ki, bugün finans sektöründe &lt;a href=&quot;http://goldmansachs.com&quot;&gt;Goldman Sachs&lt;/a&gt;‘tan tutun &lt;a href=&quot;http://fico.com&quot;&gt;FICO&lt;/a&gt;‘ya, kurumları işgal ettiğini söyleyebileceğimiz, çok yaygın kullanımda.&lt;/p&gt;

&lt;p&gt;Elastic sizi heyecanlandırmış olabilir, hemen daha fazla bilgi almak isterseniz &lt;a href=&quot;http://elastic.co&quot;&gt;Elastic sitesini&lt;/a&gt; ziyaret edin.&lt;/p&gt;

&lt;p&gt;Elastic ile ilgili bu köşede yazılarımızı sürdüreceğiz inşallah. Daha fazla bilgi için iletişime geçebilirsiiz.&lt;/p&gt;

</description>
        <pubDate>Thu, 10 Sep 2015 03:38:42 +0300</pubDate>
        <link>http://blog.kodguru.com/elasticsearch/bigdata/2015/09/10/elasticsearch-kosesi.html</link>
        <guid isPermaLink="true">http://blog.kodguru.com/elasticsearch/bigdata/2015/09/10/elasticsearch-kosesi.html</guid>
        
        
        <category>elasticsearch</category>
        
        <category>bigdata</category>
        
      </item>
    
      <item>
        <title>Mendix ile yazılım modellemesi nasıl yapılır</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.mendix.com&quot;&gt;Mendix&lt;/a&gt;, 2005 yılından beri varlığını sürdüren bir uygulama geliştirme platformudur. Teknolojinin gelişmesiyle birlikte, hem backend, hem de frontend geliştirme süreçlerini tek ortamda birleştirmeyi başarmış bir platformdur. Son birkaç yıldır Gartner ve Forrester analizlerinde kendine iyi bir yer edinmiştir. Hem prototip geliştirme, hem de test ve production için uygundur. En önemli avantajı, &lt;a href=&quot;http://www.slideshare.net/MattHaney/qsm-mendix-benchmark-report&quot;&gt;QSM&lt;/a&gt; tarafından da ölçülmüş olan, ürün geliştirme sürecini hızlandırmasıdır.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mcku/mcku.github.io/master/resimler/qsm_mendix.png&quot; alt=&quot;Mendix 6 kat hızlı&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Aylık abonelik ile kullanılan bir ürün olmasına rağmen, uygulamayı 10 kullanıcıdan az kişinin kullanacağı durumlarda tamamen ücretsizdir. Dolayısıyla Mendix ile ürün prototipleme de rahatlıkla yapılabilir. Unutmadan belirtmek lazım, yazılım modellemesi yaparken kod yazmıyoruz. Kod yazmadan nasıl olabilir derseniz, işin sırrı burada saklı, oldukça güçlü bir modelleme yaklaşımı, kod yazarak yapılabilecek neredeyse her şeyi, program kontrol akışını kastediyorum, detaylı bir şekilde görsel olarak bir tür Lego (R) oluşturma problemine indirgiyor. Ve bu Lego’nun parçaları oldukça detaylı.&lt;/p&gt;

&lt;p&gt;Mendix ve benzer ürünler, çok değerli bir kaynak olan yazılımcılarımızın finans, sigorta gibi sektörlerde ekran tasarımı yapmak yerine, daha stratejik endüstriyel alanlara kaymasını sağlayacak şekilde kurumsal talebi değiştirme potansiyeli taşıyor.&lt;/p&gt;

&lt;p&gt;Hollanda firması olan Mendix’in Türkiye’deki temsilciliğini &lt;a href=&quot;http://www.incentro.com&quot;&gt;Incentro&lt;/a&gt; yapmaktadır.&lt;/p&gt;

</description>
        <pubDate>Tue, 25 Aug 2015 13:28:30 +0300</pubDate>
        <link>http://blog.kodguru.com/mendix/2015/08/25/mendix-ile-yazilim-modellemesi-nasil-yapilir.html</link>
        <guid isPermaLink="true">http://blog.kodguru.com/mendix/2015/08/25/mendix-ile-yazilim-modellemesi-nasil-yapilir.html</guid>
        
        
        <category>mendix</category>
        
      </item>
    
      <item>
        <title>Hızlı uygulama geliştirme</title>
        <description>&lt;p&gt;Yazılım geliştirmek yerine yazılım modellemek. Büyük kurumlar dev yazılım projeleri yerine modelleme yapacak.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mcku/mcku.github.io/master/resimler/hizli-yazilim-gelistirin.png&quot; alt=&quot;Yazılımınızı kodlamayın, modelleyin&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Geleneksel yaklaşımda, ihtiyaçlar büyük ve sürekli yoğunluk yaşayan bir IT ekibi tarafından analiz edilip, belli bir öncelik sırasıyla gerçekleştiriliyordu. Yeni çevik yaklaşımda ise, iş kolları, proje geliştiren yazılım ekibiyle sürekli yakın çalışan bir takım üyesi haline geldi. Yine de kod kalitesi sorunu asla çözülemedi, dönem dönem hassas seyredebilen yazılım ekibi psikolojisi, ekip değişiklikleri gibi faktörler proje başarısı karşısında ciddi risk oluşturuyor.&lt;/p&gt;

&lt;p&gt;Hızlı uygulama araçlarının bu sorunlara yaklaşımı, karmaşık yazılım geliştirme süreçleri yerine çok daha basit olan modelleme ile, ihtiyaçların çok daha az sayıda yazılımcı, hatta doğrudan iş analistleri ile karşılanmasıdır.&lt;/p&gt;

&lt;p&gt;Bir sonraki projemde hızlı uygulama geliştirme araçları mı kullanmalıyım yoksa yazılım ekibi mi kurmam gerekir?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Modelleme araçlarında, işiniz için gereken modelleri hazır kütüphanelerden kullanabilir veya siz geliştirirsiniz.&lt;/li&gt;
  &lt;li&gt;İş kolları, işinizi yazılım ekiplerinden daha iyi tanırlar. İşini iyi yapan bir ekibiniz var, teknolojik yatkınlığı olan elemanlardan proje ekibi oluşturun ve modellemeyi onlar yapsın.&lt;/li&gt;
  &lt;li&gt;İş kollarıyla yazılımcıların iletişimi sıkıntılı olabilir. İletişim sorunları ürün kalitesini etkiler. İletişim sorunu hızlı geliştirme araçları ile ortadan kalkar.&lt;/li&gt;
  &lt;li&gt;Bonus: İş biriminiz yeni nesil çevik çalışma felsefesini benimseyecektir&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Modelleme aracını değerlendirirken dikkat edilmesi gereken hususlar:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Modelleme aracının olgunluk seviyesi yeterli mi? Modelleme aracı ne kadar güçlüyse, modelleyebilecekleriniz o kadar geniş kapsamlı ve esnek olacaktır. Modelleme aracı yetersizse yolda kalma ihtimali olacaktır.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Bazı araçlarda, modellemeden sonra bile kod yazımı gerekmektedir. Ürün seçerken sıfır kod ile, yani hiç kod yazmak gerekmeden bir yazılım akışıyla yapılabilecek her şeyin yapılabilmesi gereksinimini arayın.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ne kadar sürede geri dönüş alınır?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Modelleme, yazılım geliştirmeden daha hızlı yapılabildiğinden, geliştirmelerinizi çok kısa sürede ortaya çıkarabilirsiniz. İster komple yeni ürün, isterse mevcut modelde değişiklik olsun, süre olarak klasik yazılım geliştirmeye göre 4-8 kat daha verimli bir geri dönüş olacaktır.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Geliştirme süresinin dramatik bir şekilde kısa olması, beklenenden çok daha erken getiri almaya başlanması demektir.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bu yaklaşımın özellikle Oracle, SAP, Logo gibi bir çekirdek sistemi mevcut olan kuruluşlarca, mevcut çekirdekle birlikte çalışacak süreçlerin hızlı ve düşük maliyetle geliştirilebileceği yeni nesil geliştirme yaklaşımı olarak benimsenmesini öngörmekteyiz.&lt;/p&gt;
</description>
        <pubDate>Mon, 15 Jun 2015 12:35:10 +0300</pubDate>
        <link>http://blog.kodguru.com/yazilim/2015/06/15/hizli-uygulama-gelistirme.html</link>
        <guid isPermaLink="true">http://blog.kodguru.com/yazilim/2015/06/15/hizli-uygulama-gelistirme.html</guid>
        
        
        <category>yazilim</category>
        
      </item>
    
  </channel>
</rss>
